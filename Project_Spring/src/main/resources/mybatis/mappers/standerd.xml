<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.bom">

<!--  원재료 조회 -->
	<select id="selectPageMaterials" resultType="Materials_DTO" parameterType="Materials_DTO">
		select rnum, tmp2.* from(
 			select rownum rnum, tmp1.* from(
	            select  * from MATERIALS
	            WHERE materialdel = 'n'
	            order by MATERIALNAME
   			 )tmp1
		)tmp2
		
		where rnum <![CDATA[>=]]> #{indexStart} and rnum <![CDATA[<=]]> #{indexEnd}
		
	</select>
	
	<select id="totalMaterials" resultType="int" >
		select count(*) from MATERIALS
		WHERE materialdel = 'n'
	
	</select>
	
<!-- 	완재품조회 -->
	<select id="selectPageProducts" resultType="Products_DTO" parameterType="Products_DTO">
		select rnum, tmp2.* from(
		    		select rownum rnum, tmp1.* from(
		            select  * from PRODUCTS
		            WHERE PRODUCTDEL = 'n'
		            order by PRODUCTNAME
		           
		   			 ) tmp1
		)tmp2
		where rnum <![CDATA[>=]]> #{indexStart} and rnum <![CDATA[<=]]> #{indexEnd}
		
	</select>
	
	
	<!-- 	완제품카운트갑 -->
	<select id="totalProducts" resultType="int" parameterType="Products_DTO">
		select count(*) from PRODUCTS
		<where>
		 PRODUCTDEL = 'n'
		 <if test="serch != null and serch !='' ">
		 and PRODUCTNAME like ('%' || #{serch} || '%')
		 </if>
		</where>
	</select>
	
<!-- 	원재료/완제품조회 -->
	<select id="selectPageMaterialsProducts" resultType="Materials_DTO" parameterType="Materials_DTO">
	
		select rnum, materialname,PRICE,SPEC,UNIT,SUPPLIER,PARTNUMBER,LOTNUMBER,WAREHOUSE,type,materialdel,materialid from(
                select rownum rnum, tmp1.* from(
		        select materialname,PRICE,SPEC,UNIT,SUPPLIER,PARTNUMBER,LOTNUMBER,WAREHOUSE,'m' type,materialdel,materialid from MATERIALS
                WHERE materialdel = 'n'
                union all
                select productname materialname,PRICE,SPEC,UNIT,'',PARTNUMBER,LOTNUMBER,WAREHOUSE,'p' type,productdel materialdel,productid materialid from products
                WHERE productdel = 'n' 
                order by materialname
                 ) tmp1
		)tmp2
			where rnum <![CDATA[>=]]> #{indexStart} and rnum <![CDATA[<=]]> #{indexEnd}
		
	</select>
	
	<select id="totalMaPr" resultType="int" >
			 select count(*)
			 from(
					select materialname,PRICE,SPEC,UNIT,SUPPLIER,PARTNUMBER,LOTNUMBER,WAREHOUSE,'m' type,materialdel,materialid from MATERIALS
					WHERE materialdel = 'n'
					union all
					select productname materialname,PRICE,SPEC,UNIT,'',PARTNUMBER,LOTNUMBER,WAREHOUSE,'p' type,productdel materialdel,productid materialid from products
					WHERE productdel = 'n' 
					order by materialname
			 ) count
	
	</select>
<!-- 	원재료생성	 -->
	<insert id="insertMaterials" parameterType="Materials_DTO">
	insert into materials 
	values ('',#{materialname},#{price},#{spec},#{unit},#{supplier},#{partNumber},#{lotnumber},#{warehouse},'n')
	</insert>
<!-- 	원재료 수정 -->
	<update id="updateMaterials" parameterType="Materials_DTO">
	update materials
		set materialname=#{materialname} ,
		price=#{price} ,
		spec=#{spec} ,
		unit=#{unit},
		supplier=#{supplier},
		partNumber=#{partNumber},
		lotnumber=#{lotnumber},
		warehouse=#{warehouse}
		where materialid = #{materialid}
	</update>
	
<!-- 	원재료 삭제 -->
	<update id="deleteMaterials" parameterType="Materials_DTO">
		update materials
			set materialdel= 'y' 
		where materialid = #{materialid}
	</update>
	
	
<!-- 	완재품생성 -->
	<insert id="insertProducts" parameterType="Products_DTO">
		insert into products 
		values ('',#{productname},#{partnumber},'포장 후 30일 이내',#{warehouse},null,null,null,#{price},#{spec},#{unit},'n',#{lotnumber},sysdate)
	</insert>

	
<!-- 	완재품 수정 -->
	<update id="updateProducts" parameterType="Products_DTO">
		update products
		set productname=#{productname} ,
		partnumber=#{partnumber} ,
		price=#{price} ,
		spec=#{spec},
		unit=#{unit},
		lotnumber=#{lotnumber},
		warehouse=#{warehouse}
		where productid = #{productid}
	</update>
	
	<!-- 	완제품 삭제 -->
	<update id="deleteProducts" parameterType="Products_DTO">
		update products
			set productdel= 'y' 
		where productid = #{productid}
	</update>
			
<!-- 	완제품 검색으로 이름으로가져오기		 -->
	<select id="selectProductsserch"   resultType="Products_DTO" parameterType="Products_DTO">

		select *
		    from (
		    select rownum rnum, tem.*
		        from (
		            select PRODUCTNAME,
		                    PRODUCTIMAGE,
		                    NORMALCRITERIA,
		                    ABNORMALCRITERIA,
		                    PRODUCTID 
		                    from PRODUCTS
	                    <where>
				            PRODUCTDEL = 'n'
				              <if test="serch != null and serch !='' ">
				            and PRODUCTNAME like ('%' || #{serch} || '%')
				            </if>
			             </where>
				            order by PRODUCTNAME
			        )tem
			    )tem2
		where rnum <![CDATA[>=]]> #{indexStart} and rnum <![CDATA[<=]]> #{indexEnd}
		
	</select>
	
	<!-- 	완제품 검색으로 productid로만가져오기		 -->
	<select id="insSelectproductid"   resultType="Products_DTO" parameterType="int">
	
	select PRODUCTID,PRODUCTNAME,PRODUCTIMAGE,NORMALCRITERIA,ABNORMALCRITERIA from PRODUCTS
		 where PRODUCTDEL = 'n'
		and PRODUCTID = #{_parameter}
	</select>
	
	
		<!--  검사기준	완재품/페이징 값만조회  -->
		<select id="selectFinishedProduct"  resultType="Products_DTO"  parameterType="Products_DTO">
			select rnum, tmp2.PRODUCTNAME,PRODUCTIMAGE,NORMALCRITERIA,ABNORMALCRITERIA,PRODUCTID from(
		    		select rownum rnum, tmp1.PRODUCTNAME,PRODUCTIMAGE,NORMALCRITERIA,ABNORMALCRITERIA,PRODUCTID from(
		            select  * from PRODUCTS
		            where PRODUCTDEL = 'n'
		        	    order by PRODUCTNAME
		   			 ) tmp1
				)tmp2
				where rnum <![CDATA[>=]]> #{indexStart} and rnum <![CDATA[<=]]> #{indexEnd}
		</select>
		
	<!-- 완재품관리 셀렉트 검색 이름이없으면 전체검색 있으면 그것만검색-->
	<select id="product_SelectALL" resultType="Products_DTO" parameterType="String">
	

		select rnum, tmp2.* from(
	    		select rownum rnum, tmp1.* from(
	            select productid,productname,partnumber,expdatedesc,warehouse,productimage 
		from PRODUCTS
		<where>
	             PRODUCTDEL = 'n'
			<if test="serch != null and serch !='' ">
	    		and productname like ('%' || #{serch} || '%') 
			</if>
		</where>
	            order by PRODUCTNAME
	           
	   			 ) tmp1
	)tmp2
	where rnum <![CDATA[>=]]> #{indexStart} and rnum <![CDATA[<=]]> #{indexEnd}
	
	</select>
		
		
	
	<!--  검사기준	완재품 이름만 조회  -->
		<select id="selectProductsName"   resultType="Products_DTO">
	        select PRODUCTNAME,PRODUCTID from PRODUCTs
	          WHERE PRODUCTDEL = 'n'
	          order by PRODUCTNAME
		</select>
		
		<!-- 	검사기준 완재품 수정 -->
	<update id="updateProductsFhinish" parameterType="Products_DTO">
		update products
		set productname=#{productname} ,
		PRODUCTIMAGE=#{productimage} ,
		NORMALCRITERIA=#{normalcriteria} ,
		ABNORMALCRITERIA=#{abnormalcriteria}
		where productid = #{productid}
	</update>
		

	






	<select id="selectMaterialsProducts"
		resultType="Materials_DTO">
		SELECT materialname, PRICE, SPEC, UNIT, SUPPLIER,
		PARTNUMBER, LOTNUMBER, WAREHOUSE,
		'm' AS type, materialdel, materialid
		FROM MATERIALS
		WHERE materialdel = 'n'

		UNION ALL

		SELECT productname AS materialname, PRICE, SPEC, UNIT,
		'' AS SUPPLIER, PARTNUMBER, LOTNUMBER, WAREHOUSE,
		'p' AS type, productdel AS materialdel, productid AS materialid
		FROM PRODUCTS
		WHERE productdel = 'n'

		ORDER BY materialname
	</select>
	

	
	<update id="updateMaterialsProducts_products" parameterType="Materials_DTO">
		update products
		set productname=#{materialname} ,
		partnumber=#{partNumber} ,
		price=#{price} ,
		spec=#{spec},
		unit=#{unit},
		lotnumber=#{lotnumber},
		warehouse=#{warehouse}
		where productid = #{materialid}
	
	</update>
	
<!-- 	프러덕트 삭제  -->
	<update id="deleteMaterialsProducts_products" parameterType="Materials_DTO">
		update products
		set productdel= 'y' 
		where productid = #{materialid}
	
	</update>
	
<!-- 	생산공정 조회 -->
	<select id="SelectProductPnamePid" resultType="Products_DTO" >
	
		            select  productname,productid  from PRODUCTS
		            WHERE PRODUCTDEL = 'n'
		            order by productid

	</select>
	
	<!-- 	생산공정 조회 -->
	<select id="SelectProductPid_All" resultType="ProductionProcessDescription_DTO" parameterType="int">
	
		          select PROCESSID, PRODUCTID,
		          PROCESSSTAGE,DESCRIPTION,EQUIPMENT,HYGIENE,PROCESSDESCRIPTIONSDEL
		          from PROCESSDESCRIPTIONS 
					where productid = #{_parameter}
					and PROCESSDESCRIPTIONSDEL = 'n'
					order by productid

	</select>
	
	<!-- 	생산공정 생성 -->
	<insert id="ProductionProcessInsert" parameterType="ProductionProcessDescription_DTO">
	
		insert into PROCESSDESCRIPTIONS 
		(PROCESSID,PRODUCTID,PROCESSSTAGE,DESCRIPTION,EQUIPMENT,HYGIENE,PROCESSDESCRIPTIONSDEL)
		values ('',#{productid},#{processstage},#{description},#{equipment},#{hygiene},'n')

	</insert>

	<!-- 	생산공정 수정 -->
	<update id="ProductionProcessupdate" parameterType="ProductionProcessDescription_DTO">
		update PROCESSDESCRIPTIONS
		set processstage=#{processstage} ,
		description=#{description} ,
		equipment=#{equipment} ,
		hygiene=#{hygiene}
		where processid = #{processid}
	</update>
	
	<!-- 	생산공정 한줄만 셀렉트 -->
	<select id="ProductionProcess_select_one_line" parameterType="int" resultType="ProductionProcessDescription_DTO">
	select PROCESSID,PROCESSSTAGE,DESCRIPTION,EQUIPMENT,HYGIENE
	from PROCESSDESCRIPTIONS
	where processid = #{_parameter}
	</select>
	
		<!-- 	생산공정 삭제 -->
	<update id="ProductionProcessDelete" parameterType="ProductionProcessDescription_DTO">
		update PROCESSDESCRIPTIONS
		set PROCESSDESCRIPTIONSDEL='y'
		where processid = #{processid}
	</update>
	
	<!--빌드오브 머터리얼 완제품id > 원재료 조회 -->
	<select id="BuildOfMaterials_materialSelect" parameterType="Materials_DTO" resultType="Materials_DTO">
	select rnum, tmp2.* from(
    select rownum rnum,tmp1.* from(
            SELECT  
                m.MATERIALID, 
                m.MATERIALNAME, 
                m.PRICE, 
                m.SPEC, 
                m.UNIT, 
                m.SUPPLIER, 
                m.PARTNUMBER, 
                m.LOTNUMBER, 
                m.WAREHOUSE, 
                m.MATERIALDEL, 
                b.MATERIALID  as bom_ma_id, 
                b.BOMID  , 
                b.PRODUCTID as bom_pr_id, 
                b.QUANTITY as bom_quan, 
                b.bomdel , 
                i.MATERIALID as inven_ma_id, 
                i.QUANTITY as inven_quan 
                FROM  materials m 
                left JOIN boms b ON m.MATERIALID = b.MATERIALID  
                left join inventorystatus i on m.MATERIALID = i.MATERIALID 
                where  m.materialdel = 'n' 
                and b.productid = #{productid}
                and b.bomdel = 'n' 
                order by m.MATERIALID 
    		 ) tmp1
        )tmp2
where rnum <![CDATA[>=]]> #{indexStart} and rnum <![CDATA[<=]]> #{indexEnd}
		
	</select>
	
	<!--빌드오브 머터리얼 완제품id > 원재료 >생성 >제품명출력 -->
	<select id="BuildOfMaterials_materialList" resultType="Materials_DTO"  >
	select MATERIALID,MATERIALNAME from MATERIALS  WHERE materialdel = 'n'
	</select>
	
	<insert id="BuildOfMaterials_materialListInsert" parameterType="Bom_DTO" >
	insert into boms 
	 values ('',#{quantity},#{materialid},#{productid},'n')
	</insert>
	
<!-- 	bom material 삭제코드 -->
	<update id="BuildOfMaterials_materialListDelete" parameterType="Bom_DTO" >
 					update boms 
					 set bomdel  = 'y'
					where bomid = #{bomid}
	</update>
	
	<!-- 	bom material수정코드 -->
	<update id="BuildOfMaterials_materialListUpdate" parameterType="Bom_DTO" >
			  	update boms 
				set quantity  = #{quantity}
				where bomid =#{bomid}
	</update>
	
	<!-- 	bom 한줄만 셀렉트 -->
	<select id="BuildOfMaterials_materialOneList" resultType="Materials_DTO" parameterType="int" >
		SELECT 
	m.MATERIALID, 
	m.MATERIALNAME, 
	m.PRICE, 
	m.SPEC, 
	m.UNIT, 
	m.SUPPLIER, 
	m.PARTNUMBER, 
	m.LOTNUMBER, 
	m.WAREHOUSE, 
	m.MATERIALDEL, 
	b.MATERIALID  as bom_ma_id, 
	b.BOMID  , 
	b.PRODUCTID as bom_pr_id, 
	b.QUANTITY as bom_quan, 
	b.bomdel , 
	i.MATERIALID as inven_ma_id, 
	i.QUANTITY as inven_quan 
	FROM  materials m 
	left JOIN boms b ON m.MATERIALID = b.MATERIALID  
	left join inventorystatus i on m.MATERIALID = i.MATERIALID 
	where  m.materialdel = 'n' 
	and b.BOMID = #{_parameter}
	and b.bomdel = 'n' 
	order by m.MATERIALID 
	</select>
	
<!-- 	페이징을 하기위해 토탈계수 출력코드 -->
<select id="BuildOfMaterials_materialCount" resultType="int" parameterType="Materials_DTO">
select count(*)from(
SELECT 
	m.MATERIALID, 
	m.MATERIALNAME, 
	m.PRICE, 
	m.SPEC, 
	m.UNIT, 
	m.SUPPLIER, 
	m.PARTNUMBER, 
	m.LOTNUMBER, 
	m.WAREHOUSE, 
	m.MATERIALDEL, 
	b.MATERIALID  as bom_ma_id, 
	b.BOMID  , 
	b.PRODUCTID as bom_pr_id, 
	b.QUANTITY as bom_quan, 
	b.bomdel , 
	i.MATERIALID as inven_ma_id, 
	i.QUANTITY as inven_quan 
	FROM  materials m 
	left JOIN boms b ON m.MATERIALID = b.MATERIALID  
	left join inventorystatus i on m.MATERIALID = i.MATERIALID 
	where  m.materialdel = 'n' 
	and b.productid = #{productid}
	and b.bomdel = 'n' 
	order by m.MATERIALID 
    )count
</select>


</mapper>
