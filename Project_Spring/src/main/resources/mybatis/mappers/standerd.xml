<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.bom">

<!--  원재료 조회 -->
	<select id="selectPageMaterials" resultType="Materials_DTO" parameterType="Materials_DTO">
		select rnum, tmp2.* from(
 			select rownum rnum, tmp1.* from(
	            select  * from MATERIALS
	            WHERE materialdel = 'n'
	            order by MATERIALNAME
   			 )tmp1
		)tmp2
		
		where rnum <![CDATA[>=]]> #{indexStart} and rnum <![CDATA[<=]]> #{indexEnd}
		
	</select>
	
	<select id="totalMaterials" resultType="int" >
		select count(*) from MATERIALS
		WHERE materialdel = 'n'
	
	</select>
	
<!-- 	완재품조회 -->
	<select id="selectPageProducts" resultType="Products_DTO" parameterType="Products_DTO">
		select rnum, tmp2.* from(
		    		select rownum rnum, tmp1.* from(
		            select  * from PRODUCTS
		            WHERE PRODUCTDEL = 'n'
		            order by PRODUCTNAME
		           
		   			 ) tmp1
		)tmp2
		where rnum <![CDATA[>=]]> #{indexStart} and rnum <![CDATA[<=]]> #{indexEnd}
		
	</select>
	
	<!--  검사기준	완재품 값만조회  -->
	<select id="selectProducts"  resultType="Products_DTO" >
          select  * from PRODUCTS
          WHERE PRODUCTDEL = 'n'
          order by PRODUCTNAME
	</select>
	
	<!--  검사기준	완재품 이름만 조회  -->
	<select id="selectProductsName"   resultType="Products_DTO">
        select PRODUCTNAME,PRODUCTID from PRODUCTs
          WHERE PRODUCTDEL = 'n'
          order by PRODUCTNAME
	</select>
	
	<select id="totalProducts" resultType="int" >
		select count(*) from PRODUCTS
		WHERE PRODUCTDEL = 'n'
	
	</select>
	
<!-- 	원재료/완제품조회 -->
	<select id="selectPageMaterialsProducts" resultType="Materials_DTO" parameterType="Materials_DTO">
	
		select rnum, materialname,PRICE,SPEC,UNIT,SUPPLIER,PARTNUMBER,LOTNUMBER,WAREHOUSE,type,materialdel,materialid from(
                select rownum rnum, tmp1.* from(
		        select materialname,PRICE,SPEC,UNIT,SUPPLIER,PARTNUMBER,LOTNUMBER,WAREHOUSE,'m' type,materialdel,materialid from MATERIALS
                WHERE materialdel = 'n'
                union all
                select productname materialname,PRICE,SPEC,UNIT,'',PARTNUMBER,LOTNUMBER,WAREHOUSE,'p' type,productdel materialdel,productid materialid from products
                WHERE productdel = 'n' 
                order by materialname
                 ) tmp1
		)tmp2
			where rnum <![CDATA[>=]]> #{indexStart} and rnum <![CDATA[<=]]> #{indexEnd}
		
	</select>
	
	<select id="totalMaPr" resultType="int" >
			 select count(*)
			 from(
					select materialname,PRICE,SPEC,UNIT,SUPPLIER,PARTNUMBER,LOTNUMBER,WAREHOUSE,'m' type,materialdel,materialid from MATERIALS
					WHERE materialdel = 'n'
					union all
					select productname materialname,PRICE,SPEC,UNIT,'',PARTNUMBER,LOTNUMBER,WAREHOUSE,'p' type,productdel materialdel,productid materialid from products
					WHERE productdel = 'n' 
					order by materialname
			 ) count
	
	</select>
<!-- 	원재료생성	 -->
	<insert id="insertMaterials" parameterType="Materials_DTO">
	insert into materials 
	values ('',#{materialname},#{price},#{spec},#{unit},#{supplier},#{partNumber},#{lotnumber},#{warehouse},'n')
	</insert>
<!-- 	원재료 수정 -->
	<update id="updateMaterials" parameterType="Materials_DTO">
	update materials
		set materialname=#{materialname} ,
		price=#{price} ,
		spec=#{spec} ,
		unit=#{unit},
		supplier=#{supplier},
		partNumber=#{partNumber},
		lotnumber=#{lotnumber},
		warehouse=#{warehouse}
		where materialid = #{materialid}
	</update>
	
<!-- 	원재료 삭제 -->
	<update id="deleteMaterials" parameterType="Materials_DTO">
		update materials
			set materialdel= 'y' 
		where materialid = #{materialid}
	</update>
	
	
<!-- 	완재품생성 -->
	<insert id="insertProducts" parameterType="Products_DTO">
		insert into products 
		values ('',#{productname},#{partnumber},null,#{warehouse},null,null,null,#{price},#{spec},#{unit},'n',#{lotnumber})
	</insert>

	
<!-- 	완재품 수정 -->
	<update id="updateProducts" parameterType="Products_DTO">
		update products
		set productname=#{productname} ,
		partnumber=#{partnumber} ,
		price=#{price} ,
		spec=#{spec},
		unit=#{unit},
		lotnumber=#{lotnumber},
		warehouse=#{warehouse}
		where productid = #{productid}
	</update>
	
	<!-- 	완제품 삭제 -->
	<update id="deleteProducts" parameterType="Products_DTO">
		update products
			set productdel= 'y' 
		where productid = #{productid}
	</update>
			
<!-- 	완제품 검색으로 이름으로가져오기		 -->
	<select id="selectProductsserch"   resultType="Products_DTO" parameterType="string">
        select * from PRODUCTs
		
		<where>
		PRODUCTDEL = 'n'
        <if test="_parameter != null and _parameter !='' ">
		and PRODUCTNAME like ('%' || #{_parameter} || '%')
		</if>
 		</where>
		order by PRODUCTNAME
	</select>
	
		
		
		








	<select id="selectMaterialsProducts"
		resultType="Materials_DTO">
		SELECT materialname, PRICE, SPEC, UNIT, SUPPLIER,
		PARTNUMBER, LOTNUMBER, WAREHOUSE,
		'm' AS type, materialdel, materialid
		FROM MATERIALS
		WHERE materialdel = 'n'

		UNION ALL

		SELECT productname AS materialname, PRICE, SPEC, UNIT,
		'' AS SUPPLIER, PARTNUMBER, LOTNUMBER, WAREHOUSE,
		'p' AS type, productdel AS materialdel, productid AS materialid
		FROM PRODUCTS
		WHERE productdel = 'n'

		ORDER BY materialname
	</select>
	

	
	<update id="updateMaterialsProducts_products" parameterType="Materials_DTO">
		update products
		set productname=#{materialname} ,
		partnumber=#{partNumber} ,
		price=#{price} ,
		spec=#{spec},
		unit=#{unit},
		lotnumber=#{lotnumber},
		warehouse=#{warehouse}
		where productid = #{materialid}
	
	</update>
	
	<update id="deleteMaterialsProducts_products" parameterType="Materials_DTO">
		update products
		set productdel= 'y' 
		where productid = #{materialid}
	
	</update>
	


	

	

</mapper>
