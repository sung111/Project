<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="project.dao.mapper.ProdplanMapper">

  <!-- 조인 결과 매핑할 resultMap -->
  <resultMap id="PlanWithProductResultMap" type="project.dto.ProductionPlan_DTO">
    <id property="planId" column="planid" />
    <result property="userId" column="userid" />
    <result property="productId" column="productid" />
    <result property="totalqty" column="totalqty" />
    <result property="startDate" column="startdate" />
    <result property="endDate" column="enddate" />
    <result property="createDate" column="createdate" />
    <result property="deliveryDate" column="deliverydate" />
    <result property="deliveryDest" column="deliverydest" />
    <result property="planStatus" column="planstatus" />
    <result property="planCause" column="plancause" />
    <result property="planNotes" column="plannotes" />

    <!-- 조인된 product 정보 매핑 -->
    <association property="product" javaType="project.dto.Products_DTO">
      <id property="productId" column="productid" />
      <result property="productname" column="productname" />
      <result property="spec" column="spec" />
      <result property="unit" column="unit" />
      <result property="partnumber" column="partnumber" />
      <result property="warehouse" column="warehouse" />
    </association>
  </resultMap>

  <!-- 실제 select 쿼리: 모든 생산 계획 조회 -->
  <select id="selectAllPlans" resultMap="PlanWithProductResultMap">
    SELECT 
      pp.planid, 
      pp.userid, 
      pp.productid, 
      pp.totalqty, 
      pp.startdate, 
      pp.enddate, 
      pp.createdate, 
      pp.deliverydate, 
      pp.deliverydest, 
      pp.planstatus, 
      pp.plancause, 
      pp.plannotes, 
      p.productname, 
      p.spec, 
      p.unit, 
      p.partnumber, 
      p.warehouse,
      p.lotnumber
    FROM productionplans pp
    LEFT JOIN products p 
      ON pp.productid = p.productid
  </select>

  <!-- 상품 자동완성용 검색 쿼리 -->
  <select id="getProducts" parameterType="String" resultMap="PlanWithProductResultMap">
    SELECT 
      pp.planid, pp.userid, pp.productid, pp.totalqty, pp.startdate,
      pp.enddate, pp.createdate, pp.deliverydate, pp.deliverydest,
      pp.planstatus, pp.plancause, pp.plannotes,
      p.productname, p.spec, p.unit, p.partnumber, p.warehouse, p.lotnumber
    FROM productionplans pp
    LEFT JOIN products p ON pp.productid = p.productid
    WHERE p.productname LIKE CONCAT('%', #{searchTerm}, '%')
  </select>

  <!-- 생산 계획 세부 정보 조회 -->
  <select id="getPlanDetails" parameterType="int" resultMap="PlanWithProductResultMap">
    SELECT 
      pp.planid, 
      pp.userid, 
      pp.productid, 
      pp.totalqty, 
      pp.startdate, 
      pp.enddate, 
      pp.createdate, 
      pp.deliverydate, 
      pp.deliverydest, 
      pp.planstatus, 
      pp.plancause, 
      pp.plannotes, 
      p.productname, 
      p.spec, 
      p.unit, 
      p.partnumber, 
      p.warehouse,
      p.lotnumber
    FROM productionplans pp
    LEFT JOIN products p 
      ON pp.productid = p.productid
    WHERE pp.planid = #{planId}
  </select>

  <!-- 추가 -->
  <insert id="insertPlan" parameterType="project.dto.ProductionPlan_DTO">
    INSERT INTO productionplans (
        userId, productId, totalqty, startDate, endDate, createDate,
        deliveryDate, deliveryDest, planStatus, planCause, planNotes
    ) VALUES (
        #{userId}, #{productId}, #{totalqty}, #{startDate}, #{endDate}, #{createDate},
        #{deliveryDate}, #{deliveryDest}, #{planStatus}, #{planCause}, #{planNotes}
    )
  </insert>

  <!-- 수정 -->
  <update id="updateProdPlan" parameterType="project.dto.ProductionPlan_DTO">
    UPDATE productionplans
    SET productname = #{productname},
        lotnumber = #{lotnumber},
        unit = #{unit},
        warehouse = #{warehouse},
        deliveryDest = #{deliveryDest},
        partnumber = #{partnumber},
        totalqty = #{totalqty},
        createDate = #{createDate},
        startDate = #{startDate},
        endDate = #{endDate},
        planStatus = #{planStatus},
        planCause = #{planCause},
        planNotes = #{planNotes}
    WHERE planId = #{planId}
  </update>

  <!-- 삭제 -->
  <delete id="deletePlan" parameterType="int">
    DELETE FROM productionplans
    WHERE planid = #{planId}
  </delete>
  
    <!-- 페이지네이션 데이터 조회 -->
    <select id="getTotalCount" resultType="int">
        SELECT COUNT(*) FROM productionplans
    </select>
<select id="getProdPlanList" resultType="project.dto.ProductionPlan_DTO">
    SELECT * FROM productionplans
    LIMIT #{viewCount} OFFSET #{pageNo}
</select>


</mapper>
