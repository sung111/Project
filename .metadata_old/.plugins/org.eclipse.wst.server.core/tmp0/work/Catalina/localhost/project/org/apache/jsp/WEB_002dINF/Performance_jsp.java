/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.100
 * Generated at: 2025-03-20 08:33:12 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Performance_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("/WEB-INF/lib/standard.jar", Long.valueOf(1741565182956L));
    _jspx_dependants.put("jar:file:/C:/Users/admin/Desktop/Project/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/project_java/WEB-INF/lib/standard.jar!/META-INF/fmt.tld", Long.valueOf(1098678690000L));
    _jspx_dependants.put("jar:file:/C:/Users/admin/Desktop/Project/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/project_java/WEB-INF/lib/standard.jar!/META-INF/fn.tld", Long.valueOf(1098678690000L));
    _jspx_dependants.put("jar:file:/C:/Users/admin/Desktop/Project/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/project_java/WEB-INF/lib/standard.jar!/META-INF/c.tld", Long.valueOf(1098678690000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fpattern_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fpattern_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
    _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fpattern_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<title>실적등록</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css\\reset.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css\\Performance.css\">\r\n");
      out.write("<script src=\"js\\Performance.js\"></script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("	<div id=\"myModal\" class=\"modal\">\r\n");
      out.write("		<div class=\"modal-content\">\r\n");
      out.write("			<span class=\"close\">&times;</span>\r\n");
      out.write("			<p>여기는 모달창 내용 영역입니다.</p>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	<div class=\"warrap\">\r\n");
      out.write("		<div class=\"instruction\">\r\n");
      out.write("			<div class=\"instTop\">\r\n");
      out.write("				<div class=\"wkr\">작업지시서</div>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"instView\">\r\n");
      out.write("				");
      out.write("\r\n");
      out.write("				");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../ProdPlan.jsp", out, false);
      out.write("\r\n");
      out.write("				<!-- <iframe src=\"WorkOrder.jsp\" style=\"width:100%; hieght:100%\"></iframe> -->\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div>\r\n");
      out.write("			<div class=\"bord\">\r\n");
      out.write("				<div class=\"inBord\">\r\n");
      out.write("					<div>현재 진행률</div>\r\n");
      out.write("					<div>%</div>\r\n");
      out.write("					<div>(제품별)</div>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"inBord\">\r\n");
      out.write("					<div>불량률</div>\r\n");
      out.write("					<div>%</div>\r\n");
      out.write("					<div>(제품별)</div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"box2\">\r\n");
      out.write("				<div class=\"criteria\">\r\n");
      out.write("					<div class=\"wp\">제품명</div>\r\n");
      out.write("					<div class=\"btn2B\">\r\n");
      out.write("						<button class=\"btn2\">제품 합격/불합격 기준</button>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"registration\">\r\n");
      out.write("					<!-- form 여깄어요!! -->\r\n");
      out.write("					<form method=\"post\" action=\"Performance\"  id=\"insertForm\">\r\n");
      out.write("						<!-- insert 폼인지 확인 -->\r\n");
      out.write("						<input type=\"hidden\" name=\"command\" value=\"insert\">\r\n");
      out.write("						<div class=\"rightTop\" style=\"width: 100%;\">\r\n");
      out.write("							<div class=\"wp2\">제품명 : <span id=\"productName\">ㅎㅇ</span></div>\r\n");
      out.write("							<!-- 제품명 들어갈자리 hidden -->\r\n");
      out.write("							<input type=\"hidden\" name=\"Productplan\" id=\"Productplan\">\r\n");
      out.write("							<input type=\"hidden\" name=\"productId\" id=\"productId\">\r\n");
      out.write("							<div>\r\n");
      out.write("								<!-- 날짜데이터 삽입 -->\r\n");
      out.write("								<input type=\"datetime-local\" class=\"date1\" name=\"date\"\r\n");
      out.write("									id=\"date11\">\r\n");
      out.write("							</div>\r\n");
      out.write("							<input type=\"submit\" class=\"btn3\" value=\"등록\">\r\n");
      out.write("						</div>\r\n");
      out.write("						<div style=\"width: 100%;\">\r\n");
      out.write("							<div id=\"ea\">\r\n");
      out.write("								생산갯수 : <input type=\"number\" id=\"myInput\" min=\"1\" max=\"100\"\r\n");
      out.write("									oninput=\"validity.valid||(value='')\" value=\"10\" name=\"ea\">\r\n");
      out.write("								pack\r\n");
      out.write("							</div>\r\n");
      out.write("						</div>\r\n");
      out.write("						<textarea name=\"comment\" class=\"textarea1\" rows=\"3\"\r\n");
      out.write("							style=\"font-size: 15px;\"></textarea>\r\n");
      out.write("					</form>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"box3\">\r\n");
      out.write("				<div style=\"display: flex;\">\r\n");
      out.write("					<form method=\"post\" class=\"box3Top\"\r\n");
      out.write("						style=\"padding: 8px 10px 0 10px; width: 100%;\">\r\n");
      out.write("						<div style=\"display: flex; flex-grow: 0.1; width: 26%;\">\r\n");
      out.write("							<input type=\"text\" class=\"wp3\" name=\"searchName\"\r\n");
      out.write("								placeholder=\"제품명\"\r\n");
      out.write("								value=\"");
      out.print(request.getParameter("searchName") != null ? request.getParameter("searchName") : "");
      out.write("\">\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"date2\">\r\n");
      out.write("							<input type=\"datetime-local\" class=\"indate1\" name=\"startDate\"\r\n");
      out.write("								value=\"");
      out.print(request.getParameter("startDate") != null ? request.getParameter("startDate") : "");
      out.write("\">\r\n");
      out.write("							~ <input type=\"datetime-local\" class=\"indate2\" name=\"endDate\"\r\n");
      out.write("								value=\"");
      out.print(request.getParameter("endDate") != null ? request.getParameter("endDate") : "");
      out.write("\">\r\n");
      out.write("						</div>\r\n");
      out.write("						<div style=\"text-align: end;\">\r\n");
      out.write("							<input type=\"hidden\" name=\"command\" value=\"search\"> <input\r\n");
      out.write("								type=\"submit\" value=\"조회\" class=\"btn4\" id=\"searchbtn\">\r\n");
      out.write("							<button class=\"btn4\" id=\"reset\">초기화</button>\r\n");
      out.write("						</div>\r\n");
      out.write("					</form>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"indexBox\">\r\n");
      out.write("					<div class=\"index\">\r\n");
      out.write("						<div>등록시간</div>\r\n");
      out.write("						<div>제품명</div>\r\n");
      out.write("						<div>수량</div>\r\n");
      out.write("						<div>코멘트</div>\r\n");
      out.write("						<div>등록인</div>\r\n");
      out.write("						<div>비고</div>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"box3View\">\r\n");
      out.write("					");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<script>\r\n");
      out.write("	//등록버튼\r\n");
      out.write("	document.querySelector('.btn3').addEventListener('click', (e)=>{\r\n");
      out.write("		e.preventDefault();\r\n");
      out.write("		const tt = confirm(\"정말로 등록하시겠습니까?\")\r\n");
      out.write("		if(tt){\r\n");
      out.write("			document.querySelector('#insertForm').submit();\r\n");
      out.write("		}\r\n");
      out.write("	})\r\n");
      out.write("	\r\n");
      out.write("	// 작지 행클릭시 계획 시퀀스&제품 시퀀스 가져옴.\r\n");
      out.write("	document.querySelector('.instView').addEventListener('click', (e)=>{\r\n");
      out.write("		/* console.log(e.target.parentNode.hasAttribute(\"data-id\")); */\r\n");
      out.write("		if(e.target.parentNode.hasAttribute(\"data-id\")){\r\n");
      out.write("			const planId = e.target.parentNode.getAttribute(\"data-id\");\r\n");
      out.write("			const productId = e.target.parentNode.getAttribute(\"data-pi\");\r\n");
      out.write("			document.querySelector('#Productplan').value = planId;\r\n");
      out.write("			document.querySelector('#productId').value = productId;\r\n");
      out.write("			console.log(planId, productId);\r\n");
      out.write("			// \r\n");
      out.write("			fetch(\"Performance\", {\r\n");
      out.write("	            method: \"POST\", // `POST` 요청\r\n");
      out.write("	            headers: {\r\n");
      out.write("	                \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n");
      out.write("	            },\r\n");
      out.write("	            body: \"command=getProductName&productId=\" + encodeURIComponent(productId)\r\n");
      out.write("	        })\r\n");
      out.write("	        .then(response => response.text()) // 응답을 텍스트로 변환\r\n");
      out.write("	        .then(data => {\r\n");
      out.write("	            console.log(\"받은 데이터:\", data); // 서버 응답 확인\r\n");
      out.write("	            document.getElementById(\"productName\").textContent = data; // 제품명 변경\r\n");
      out.write("	            \r\n");
      out.write("	        })\r\n");
      out.write("	        .catch(error => console.error(\"Error fetching product:\", error));\r\n");
      out.write("		} else {\r\n");
      out.write("			e.preventDefault();\r\n");
      out.write("			e.target.blur();\r\n");
      out.write("			alert(\"현재 페이지에서 수정하실수없습니다.\")\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("	})\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	// 수정\r\n");
      out.write("	const tn = document.querySelectorAll('.tn')\r\n");
      out.write("	for(let tn1 of tn){\r\n");
      out.write("		tn1.addEventListener('click', (e)=>{\r\n");
      out.write("		  	/* 출력해봄 */\r\n");
      out.write("		    console.log(e.target.parentNode.parentNode);\r\n");
      out.write("		    const tarGet = e.target.parentNode.parentNode;\r\n");
      out.write("		    const date = tarGet.querySelector('.dateB').innerText;\r\n");
      out.write("		    const emdwp = tarGet.querySelector('.emdwp').innerText;\r\n");
      out.write("		    const emdtn = tarGet.querySelector('.emdtn').innerText;\r\n");
      out.write("		    const text1 = tarGet.querySelector('.text1').innerText;\r\n");
      out.write("		    const emdId = tarGet.querySelector('.emdId').innerText;\r\n");
      out.write("		    const performId1 = tarGet.querySelector('.performId').value;\r\n");
      out.write("		    console.log(date, emdwp, emdtn, text1, emdId, performId1);\r\n");
      out.write("		    \r\n");
      out.write("		    tarGet.innerHTML = `\r\n");
      out.write("								<form method=\"post\" action=\"Performance\" class=\"kk\">\r\n");
      out.write("								<input type=\"hidden\" name=\"command\" value=\"update\">\r\n");
      out.write("		    					<div class=\"dateB\">\r\n");
      out.write("		    						<input type=\"datetime-local\" class=\"date1\" name=\"date2\" value=\"${date}\" style=\"font-size:13px\">\r\n");
      out.write("									<!-- gpt 사용했음 fmt 라이브러리 공부해야함. -->\r\n");
      out.write("								</div>\r\n");
      out.write("								<div class=\"emdwp\">${emdwp}</div>\r\n");
      out.write("								<div class=\"emdtn\"><input type=\"text\" name=\"number2\" value=\"${emdtn}\" style=\"font-size:15px\"></div>\r\n");
      out.write("								<div class=\"text1\"><input type=\"text\" name=\"comment2\" value=\"${text1}\" style=\"font-size:15px\"></div>\r\n");
      out.write("								<div class=\"emdId\">${emdId}</div>\r\n");
      out.write("								<div style=\"display: flex; justify-content: center;\">\r\n");
      out.write("									<!-- css안먹어서 그냥 박아버림 -->\r\n");
      out.write("									<!-- <button class=\"tn\">수정</button> -->\r\n");
      out.write("									<input type=\"hidden\" name=\"performanceId2\" value=\"${performId1}\">\r\n");
      out.write("									<input type=\"submit\" value=\"확인\" style=\"height: 26px;\" id=\"yes\">\r\n");
      out.write("									<!-- <form method=\"post\" action=\"Performance\">\r\n");
      out.write("										<input type=\"hidden\" name=\"command\" value=\"delete\">\r\n");
      out.write("										<input type=\"submit\" value=\"삭제\">\r\n");
      out.write("									</form> -->\r\n");
      out.write("									<button class=\"cnlth\">취소</button>\r\n");
      out.write("								</div>\r\n");
      out.write("								</form>\r\n");
      out.write("							`\r\n");
      out.write("		  	document.querySelector('#yes').addEventListener('click', (e)=>{\r\n");
      out.write("				alert(\"수정되었습니다.\")\r\n");
      out.write("			})\r\n");
      out.write("		})\r\n");
      out.write("		\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	// 삭제 버튼\r\n");
      out.write("	const del = document.querySelectorAll('.delete')\r\n");
      out.write("	const deleteF = document.querySelectorAll('.deleteForm')\r\n");
      out.write("	for(let i = 0; i < del.length; i++){\r\n");
      out.write("		del[i].addEventListener('click', (e)=>{\r\n");
      out.write("			e.preventDefault()\r\n");
      out.write("			const tt = confirm(\"정말로 삭제하시겠습니까?\")\r\n");
      out.write("			if(tt){\r\n");
      out.write("				deleteF[i].submit();\r\n");
      out.write("			}\r\n");
      out.write("		})\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	//조회버튼\r\n");
      out.write("	document.querySelector('#searchbtn').addEventListener('click',(e)=>{\r\n");
      out.write("	    e.preventDefault()\r\n");
      out.write("	    if( document.querySelector('.indate1').value == '' || document.querySelector('.indate2').value == ''){\r\n");
      out.write("	    	alert(\"날짜값을 입력해야합니다.\")\r\n");
      out.write("	    } else {\r\n");
      out.write("	    	document.querySelector('#searchForm').submit();\r\n");
      out.write("	    }\r\n");
      out.write("	})\r\n");
      out.write("		\r\n");
      out.write("	// 초기화 버튼\r\n");
      out.write("  	document.querySelector('#reset').addEventListener('click',(e)=>{\r\n");
      out.write("	    e.preventDefault()\r\n");
      out.write("	    document.querySelector('.wp3').value = '';\r\n");
      out.write("	    document.querySelector('.indate1').value = '';\r\n");
      out.write("	    document.querySelector('.indate2').value = '';\r\n");
      out.write(" 	})\r\n");
      out.write("	\r\n");
      out.write(" 	// 작업지시서 필요없는 table 삭제\r\n");
      out.write("	window.onload = function() {\r\n");
      out.write("		// 상단구역\r\n");
      out.write("	    var table = document.querySelector(\".search-container\");\r\n");
      out.write("	    // button 구역\r\n");
      out.write("	    var btn = document.querySelector(\".order-buttonlayer\");\r\n");
      out.write("	    if (table || btn) {\r\n");
      out.write("	        table.remove(); // 테이블 삭제\r\n");
      out.write("	        btn.remove() // 버튼 삭제\r\n");
      out.write("	    }\r\n");
      out.write("	}; \r\n");
      out.write("\r\n");
      out.write("	</script>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fforEach_005f0.setParent(null);
    // /WEB-INF/Performance.jsp(119,5) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f0.setVar("dto");
    // /WEB-INF/Performance.jsp(119,5) name = items type = java.lang.Object reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f0.setItems((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${resultList}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
    int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
    try {
      int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
      if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("						<div class=\"dex item\">\r\n");
          out.write("							<form method=\"post\" action=\"Performance\" class=\"kk deleteForm\">\r\n");
          out.write("								<div class=\"dateB\">\r\n");
          out.write("									");
          if (_jspx_meth_fmt_005fformatDate_005f0(_jspx_th_c_005fforEach_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
            return true;
          out.write("\r\n");
          out.write("									<!-- gpt 사용했음 fmt 라이브러리 공부해야함. -->\r\n");
          out.write("								</div>\r\n");
          out.write("								<div class=\"emdwp\">");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.productName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</div>\r\n");
          out.write("								<div class=\"emdtn\">");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.productionCount}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</div>\r\n");
          out.write("								<div class=\"text1\">");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.performanceComment}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</div>\r\n");
          out.write("								<div class=\"emdId\">");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.userId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</div>\r\n");
          out.write("								<input type=\"hidden\" name=\"performanceId\"\r\n");
          out.write("									value=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.performanceId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\" class=\"performId\">\r\n");
          out.write("								<div style=\"display: flex; justify-content: center;\">\r\n");
          out.write("									<!-- css안먹어서 그냥박아버림 -->\r\n");
          out.write("									<button class=\"tn\" style=\"height: 26px;\">수정</button>\r\n");
          out.write("									<!-- <form method=\"post\" action=\"Performance\">\r\n");
          out.write("									<input type=\"hidden\" name=\"command\" value=\"update\">\r\n");
          out.write("									<input type=\"submit\" value=\"수정\">\r\n");
          out.write("								</form>-->\r\n");
          out.write("									<input type=\"hidden\" name=\"command\" value=\"delete\"> <input\r\n");
          out.write("										type=\"submit\" value=\"삭제\" style=\"height: 26px;\" class=\"delete\">\r\n");
          out.write("									<!-- 	<button class=\"tkr\">삭제</button> -->\r\n");
          out.write("								</div>\r\n");
          out.write("							</form>\r\n");
          out.write("						</div>\r\n");
          out.write("					");
          int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (java.lang.Throwable _jspx_exception) {
      while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
    } finally {
      _jspx_th_c_005fforEach_005f0.doFinally();
    }
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
    return false;
  }

  private boolean _jspx_meth_fmt_005fformatDate_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:formatDate
    org.apache.taglibs.standard.tag.rt.fmt.FormatDateTag _jspx_th_fmt_005fformatDate_005f0 = (org.apache.taglibs.standard.tag.rt.fmt.FormatDateTag) _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fpattern_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.FormatDateTag.class);
    _jspx_th_fmt_005fformatDate_005f0.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fformatDate_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f0);
    // /WEB-INF/Performance.jsp(123,9) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fformatDate_005f0.setValue((java.util.Date) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.reportTime}", java.util.Date.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
    // /WEB-INF/Performance.jsp(123,9) name = pattern type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fformatDate_005f0.setPattern("yyyy-MM-dd HH:mm:ss");
    int _jspx_eval_fmt_005fformatDate_005f0 = _jspx_th_fmt_005fformatDate_005f0.doStartTag();
    if (_jspx_th_fmt_005fformatDate_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fpattern_005fnobody.reuse(_jspx_th_fmt_005fformatDate_005f0);
    return false;
  }
}
