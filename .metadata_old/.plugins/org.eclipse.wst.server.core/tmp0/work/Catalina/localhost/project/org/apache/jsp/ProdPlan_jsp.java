/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.100
 * Generated at: 2025-03-20 05:27:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import java.util.List;
import dao.ProductionPlan_DAO;
import dto.ProductionPlan_DTO;
import dto.Products_DTO;

public final class ProdPlan_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(6);
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(6);
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("dto.Products_DTO");
    _jspx_imports_classes.add("dto.ProductionPlan_DTO");
    _jspx_imports_classes.add("dao.ProductionPlan_DAO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

ProductionPlan_DAO dao = new ProductionPlan_DAO();
List<ProductionPlan_DTO> planList = dao.getAllProductionPlans();

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<title>HHMES 생산관리</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/reset.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/prodplan.css\">\r\n");
      out.write("<script src=\"js/prodplan.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("	<table class=\"search-container\">\r\n");
      out.write("		<thead>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td class=\"search-contaoner-name\">전체 상품 생산계획</td>\r\n");
      out.write("				<td class=\"search-contaoner-name\">일정별 상품 생산계획</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("		</thead>\r\n");
      out.write("		<tbody>\r\n");
      out.write("			<tr class=\"search-table\">\r\n");
      out.write("				<td name=\"all-ProdPlan-btnlayer\" id=\"all-ProdPlan-btnlayer\"\r\n");
      out.write("					class=\"ProdPlanbtnList\">\r\n");
      out.write("					<button name=\"all-ProdPlan-Day-btn\" id=\"all-ProdPlan-Day-btn\"\r\n");
      out.write("						class=\"ProdPlanbtn\">일간</button>\r\n");
      out.write("					<button name=\"all-ProdPlan-Week-btn\" id=\"all-ProdPlan-Week-btn\"\r\n");
      out.write("						class=\"ProdPlanbtn\">주간</button>\r\n");
      out.write("					<button name=\"all-ProdPlan-Month-btn\" id=\"all-ProdPlan-Month-btn\"\r\n");
      out.write("						class=\"ProdPlanbtn\">월간</button>\r\n");
      out.write("				</td>\r\n");
      out.write("				<td name=\"Schedule-ProdPlan-btnlayer\"\r\n");
      out.write("					id=\"Schedule-ProdPlan-btnlayer\" class=\"ProdPlanbtnList\">\r\n");
      out.write("					<button name=\"Schedule-ProdPlan-Day-btn\"\r\n");
      out.write("						id=\"Schedule-ProdPlan-Day-btn\" class=\"ProdPlanbtn\">일간</button>\r\n");
      out.write("					<button name=\"Schedule-ProdPlan-Week-btn\"\r\n");
      out.write("						id=\"Schedule-ProdPlan-Week-btn\" class=\"ProdPlanbtn\">주간</button>\r\n");
      out.write("					<button name=\"Schedule-ProdPlan-Month-btn\"\r\n");
      out.write("						id=\"Schedule-ProdPlan-Month-btn\" class=\"ProdPlanbtn\">월간</button>\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr class=\"submitcontainer\">\r\n");
      out.write("				<td><input type=\"text\" name=\"Prodsearch\" class=\"searchlayer\">\r\n");
      out.write("					<input type=\"submit\" class=\"submitlayer\" value=\"Search\"></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("		</tbody>\r\n");
      out.write("		<tfoot></tfoot>\r\n");
      out.write("	</table>\r\n");
      out.write("	<table class=\"name-layer\">\r\n");
      out.write("		<tr class=\"menufacturer-info\">\r\n");
      out.write("			<td class=\"menufacturer-info-list\">\r\n");
      out.write("				<div class=\"menufacturer-info-name\">생성인</div> <input type=\"text\"\r\n");
      out.write("				name=\"delivery\" class=\"menufacturer-info-completion\"\r\n");
      out.write("				value=\"");
      out.print(session.getAttribute("username"));
      out.write("\" readonly>\r\n");
      out.write("			</td>\r\n");
      out.write("			<td class=\"menufacturer-info-list\">\r\n");
      out.write("				<div class=\"menufacturer-info-name\">생산기간</div> <input type=\"text\"\r\n");
      out.write("				name=\"writer\" class=\"menufacturer-info-completion\"\r\n");
      out.write("				value=\"");
      out.print((planList != null && !planList.isEmpty() && planList.get(0).getStartDate() != null
		&& planList.get(0).getEndDate() != null) ? planList.get(0).getStartDate() + " ~ " + planList.get(0).getEndDate()
				: "");
      out.write("\"\r\n");
      out.write("				readonly>\r\n");
      out.write("			</td>\r\n");
      out.write("			<!-- 						<td class=\"menufacturer-info-list\">\r\n");
      out.write("				<div class=\"menufacturer-info-name\">생성인</div> <input type=\"text\"\r\n");
      out.write("				name=\"delivery\" class=\"menufacturer-info-completion\" readonly>\r\n");
      out.write("			</td>\r\n");
      out.write("			<td class=\"menufacturer-info-list\">\r\n");
      out.write("				<div class=\"menufacturer-info-name\">생산기간</div> <input type=\"text\"\r\n");
      out.write("				name=\"writer\" class=\"menufacturer-info-completion\" readonly>\r\n");
      out.write("			</td> -->\r\n");
      out.write("		</tr>\r\n");
      out.write("	</table>\r\n");
      out.write("	<table class=\"new-workorder\">\r\n");
      out.write("		<tbody>\r\n");
      out.write("			<tr class=\"order-info-list\">\r\n");
      out.write("				<td>품명[규격]</td>\r\n");
      out.write("				<td>품목코드</td>\r\n");
      out.write("				<td>단위</td>\r\n");
      out.write("				<td>보관</td>\r\n");
      out.write("				<td>납품업체</td>\r\n");
      out.write("				<td>창고위치</td>\r\n");
      out.write("				<td>생산수량</td>\r\n");
      out.write("				<td>작업계획생성일</td>\r\n");
      out.write("				<td>생산시작일</td>\r\n");
      out.write("				<td>생산종료일</td>\r\n");
      out.write("				<td>MRP계산</td>\r\n");
      out.write("				<td>생산계획현황</td>\r\n");
      out.write("				<td>생산사유</td>\r\n");
      out.write("				<td>비고</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			");

			for (ProductionPlan_DTO plan : planList) {
			
      out.write("\r\n");
      out.write("			<tr name=\"prodPlanList\" class=\"order-info-content wolist\"\r\n");
      out.write("				data-id=\"");
      out.print(plan.getPlanId());
      out.write("\" data-pi=\"");
      out.print( plan.getProductId() );
      out.write("\">\r\n");
      out.write("				<td>");
      out.print((plan.getProduct() != null) ? plan.getProduct().getProductname() : "데이터 없음");
      out.write("\r\n");
      out.write("					");
      out.print("[");
      out.print((plan.getProduct() != null) ? plan.getProduct().getSpec() : "데이터 없음");
      out.print((plan.getProduct() != null) ? plan.getProduct().getUnit() : "데이터 없음");
      out.print("]");
      out.write("\r\n");
      out.write("				</td>\r\n");
      out.write("				<td>");
      out.print((plan.getProduct() != null) ? plan.getProduct().getLotnumber() : "데이터 없음");
      out.write("\r\n");
      out.write("				</td>\r\n");
      out.write("				<td>");
      out.print((plan.getProduct() != null) ? plan.getProduct().getUnit() : "데이터 없음");
      out.write("\r\n");
      out.write("				</td>\r\n");
      out.write("				<td>");
      out.print((plan.getProduct() != null) ? plan.getProduct().getWarehouse() : "데이터 없음");
      out.write("\r\n");
      out.write("				</td>\r\n");
      out.write("				<td>");
      out.print(plan.getDeliveryDest());
      out.write("</td>\r\n");
      out.write("				<td>");
      out.print((plan.getProduct() != null) ? plan.getProduct().getPartnumber() : "데이터 없음");
      out.write("\r\n");
      out.write("				</td>\r\n");
      out.write("				<td>");
      out.print(plan.getTotalqty());
      out.write("</td>\r\n");
      out.write("				<td>");
      out.print(plan.getCreateDate());
      out.write("</td>\r\n");
      out.write("				<td>");
      out.print(plan.getStartDate());
      out.write("</td>\r\n");
      out.write("				<td>");
      out.print(plan.getEndDate());
      out.write("</td>\r\n");
      out.write("				<td><a>MRP 계산</a></td>\r\n");
      out.write("				<td>");
      out.print(plan.getPlanStatus());
      out.write("</td>\r\n");
      out.write("				<td>");
      out.print(plan.getPlanCause());
      out.write("</td>\r\n");
      out.write("				<td>");
      out.print(plan.getPlanNotes());
      out.write("</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			");

			}
			
      out.write("\r\n");
      out.write("		</tbody>\r\n");
      out.write("		<tfoot>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td colspan=\"13\">\r\n");
      out.write("					<div class=\"order-buttonlayer-pagenation\" id=\"pagination-container\">\r\n");
      out.write("						<!-- 원래 정적으로 동작한 pagenation -->\r\n");
      out.write("						<!-- <a><img src=\"img/lefticon.png\" alt=\"pagenationleft\"\r\n");
      out.write("							class=\"pagenationicon\"></a> <a>1</a> <a>2</a> <a>3</a> <a>4</a>\r\n");
      out.write("						<a>5</a> <a>6</a> <a>7</a> <a>8</a> <a>9</a> <a>10</a> <a><img\r\n");
      out.write("							src=\"img/righticon.png\" alt=\"pagenationright\"\r\n");
      out.write("							class=\"pagenationicon\"></a> -->\r\n");
      out.write("					</div>\r\n");
      out.write("				</td>\r\n");
      out.write("				<td colspan=\"13\" class=\"order-buttonlayer\">\r\n");
      out.write("					<button type=\"button\" name=\"prodPlan-Modify\" id=\"prodPlan-Modify\"\r\n");
      out.write("						class=\"WO-buttonlist\">수정</button>\r\n");
      out.write("					<button type=\"button\" name=\"prodPlan-delete\" id=\"prodPlan-delete\"\r\n");
      out.write("						class=\"WO-buttonlist\">삭제</button>\r\n");
      out.write("					<button type=\"button\" name=\"new-ProdPlan\" id=\"new-ProdPlan\"\r\n");
      out.write("						class=\"WO-buttonlist\">상품계획생성</button>\r\n");
      out.write("					<button type=\"button\" name=\"WO-select\" id=\"WO-select\"\r\n");
      out.write("						class=\"WO-buttonlist\">작업지시서</button>\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("		</tfoot>\r\n");
      out.write("	</table>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
