/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.100
 * Generated at: 2025-03-20 03:47:13 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Inventorycheck_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("/WEB-INF/lib/standard.jar", Long.valueOf(1741565182956L));
    _jspx_dependants.put("jar:file:/C:/Users/admin/Desktop/Project/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/project_java/WEB-INF/lib/standard.jar!/META-INF/fmt.tld", Long.valueOf(1098678690000L));
    _jspx_dependants.put("jar:file:/C:/Users/admin/Desktop/Project/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/project_java/WEB-INF/lib/standard.jar!/META-INF/fn.tld", Long.valueOf(1098678690000L));
    _jspx_dependants.put("jar:file:/C:/Users/admin/Desktop/Project/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/project_java/WEB-INF/lib/standard.jar!/META-INF/c.tld", Long.valueOf(1098678690000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<title>재고현황조회</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css\\reset.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css\\Inventorycheck.css\">\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("	<div class=\"box\">\r\n");
      out.write("		<!--제목 -->\r\n");
      out.write("		<h1>재고 현황 조회</h1>\r\n");
      out.write("	</div>\r\n");
      out.write("	<div class=\"box\">\r\n");
      out.write("		<form class=\"container\" style=\"font-size: 15px;\" method=\"post\"\r\n");
      out.write("			action=\"Inventorycheck\" id=\"selectForm\">\r\n");
      out.write("			<label for=\"inventoryType\">제품 유형 :<select id=\"inventoryType\"\r\n");
      out.write("				name=\"searchType\">\r\n");
      out.write("					<option value=\"\">선택</option>\r\n");
      out.write("					<option value=\"원자재\">원자재</option>\r\n");
      out.write("					<option value=\"완제품\">완제품</option>\r\n");
      out.write("			</select>\r\n");
      out.write("			</label> <label for=\"warehouse\">검색 방식 :<select id=\"warehouse\"\r\n");
      out.write("				name=\"searchWay\">\r\n");
      out.write("					<option value=\"\">선택</option>\r\n");
      out.write("					<option value=\"품명\">품명</option>\r\n");
      out.write("					<option value=\"품번\">품번</option>\r\n");
      out.write("					<option value=\"LotNo\">Lot No</option>\r\n");
      out.write("			</select>\r\n");
      out.write("			</label>\r\n");
      out.write("			<div class=\"item\">\r\n");
      out.write("				<label for=\"search\" class=\"search\">검색 : </label> <input type=\"text\"\r\n");
      out.write("					id=\"search\" placeholder=\"검색어를 입력하세요.\">\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"item\">\r\n");
      out.write("				<button type=\"button\" class=\"check\">조회</button>\r\n");
      out.write("			</div>\r\n");
      out.write("		</form>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("	<div class=\"list\">\r\n");
      out.write("		<div class=\"listhead\">\r\n");
      out.write("			<button type=\"button\" id=\"addinven\" style=\"font-size: 15px;\">재고\r\n");
      out.write("				등록</button>\r\n");
      out.write("		</div>\r\n");
      out.write("		<table class=\"itemlist\">\r\n");
      out.write("			<thead>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>LOT NO</th>\r\n");
      out.write("					<th>품명</th>\r\n");
      out.write("					<th>제품유형</th>\r\n");
      out.write("					<th>품번</th>\r\n");
      out.write("					<th style=\"width: 8%;\">재고 수량</th>\r\n");
      out.write("					<th>규격</th>\r\n");
      out.write("					<th>단위</th>\r\n");
      out.write("					<th>입고일</th>\r\n");
      out.write("					<th>유효기간</th>\r\n");
      out.write("					<th colspan=\"2\">관리</th>\r\n");
      out.write("					<!-- <th>제품 유형</th> -->\r\n");
      out.write("				</tr>\r\n");
      out.write("			</thead>\r\n");
      out.write("			<tbody id=\"inventoryTableBody\">\r\n");
      out.write("				");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("				");
      if (_jspx_meth_c_005fforEach_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("			</tbody>\r\n");
      out.write("		</table>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<div id=\"popup\" class=\"popup\">\r\n");
      out.write("		<div class=\"popup-content\">\r\n");
      out.write("			<span class=\"close\" onclick=\"closePopup()\">&times;</span>\r\n");
      out.write("			<h1>재고 등록</h1>\r\n");
      out.write("			<form method=\"post\" action=\"Inventorycheck\" id=\"inputForm\">\r\n");
      out.write("				<input type=\"hidden\" name=\"command\" value=\"inputForm\">\r\n");
      out.write("				<table class=\"addtable\">\r\n");
      out.write("					<thead>\r\n");
      out.write("						<tr>\r\n");
      out.write("							<th>항목</th>\r\n");
      out.write("							<th>내용</th>\r\n");
      out.write("						</tr>\r\n");
      out.write("					</thead>\r\n");
      out.write("					<tbody>\r\n");
      out.write("						<!-- <tr>\r\n");
      out.write("							<td>등록 날짜</td>\r\n");
      out.write("							<td><input type=\"date\" id=\"addlotno\"\r\n");
      out.write("								placeholder=\"LOT NO를 입력하세요.\" class=\"popInput\" name=\"date\"></td>\r\n");
      out.write("						</tr> -->\r\n");
      out.write("						<tr>\r\n");
      out.write("							<td>품명</td>\r\n");
      out.write("							<td><input type=\"text\" id=\"additem\" placeholder=\"품명을 입력하세요.\"\r\n");
      out.write("								class=\"popInput\" list=\"suggestions\" name=\"name\"> <input\r\n");
      out.write("								type=\"hidden\" id=\"hiddenInventoryId\" name=\"inventoryId\">\r\n");
      out.write("								<input type=\"hidden\" id=\"hiddenProductInvenId\"\r\n");
      out.write("								name=\"productinvenid\"> <datalist id=\"suggestions\">\r\n");
      out.write("									");
      if (_jspx_meth_c_005fforEach_005f2(_jspx_page_context))
        return;
      out.write("									\r\n");
      out.write("									");
      if (_jspx_meth_c_005fforEach_005f3(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("								</datalist></td>\r\n");
      out.write("						</tr>\r\n");
      out.write("						<!-- <tr>\r\n");
      out.write("							<td>품번</td>\r\n");
      out.write("							<td><input type=\"text\" id=\"additemno\"\r\n");
      out.write("								placeholder=\"품번을 입력하세요.\" class=\"popInput\"></td>\r\n");
      out.write("						</tr> -->\r\n");
      out.write("						<tr>\r\n");
      out.write("							<td>입고 수량</td>\r\n");
      out.write("							<td><input type=\"number\" id=\"addquantity\" name=\"ea\"\r\n");
      out.write("								placeholder=\"입고 수량을 입력하세요.\" class=\"popInput\"\r\n");
      out.write("								style=\"width: 90%; text-align: center;\"></td>\r\n");
      out.write("						</tr>\r\n");
      out.write("						<!-- <tr>\r\n");
      out.write("							<td>단위</td>\r\n");
      out.write("							<td style=\"display: flex; justify-content: center;\">\r\n");
      out.write("								<div class=\"unit-container\" style=\"width: 90%;\">\r\n");
      out.write("									<input type=\"number\" id=\"addunit\" placeholder=\"개수를 입력하세요.\"\r\n");
      out.write("										class=\"unit-input popInput\" style=\"width: 100%;\"> <select\r\n");
      out.write("										id=\"unitDropdown\" class=\"unit-dropdown popInput\" name=\"unit\">\r\n");
      out.write("										<option value=\"g\">g</option>\r\n");
      out.write("										<option value=\"kg\">kg</option>\r\n");
      out.write("										<option value=\"ml\">ml</option>\r\n");
      out.write("										<option value=\"캔\">캔</option>\r\n");
      out.write("										<option value=\"개\">개</option>\r\n");
      out.write("									</select>\r\n");
      out.write("								</div>\r\n");
      out.write("							</td>\r\n");
      out.write("						</tr> -->\r\n");
      out.write("						<tr>\r\n");
      out.write("							<td>제품 유형</td>\r\n");
      out.write("							<td>\r\n");
      out.write("								<div class=\"unit-container\">\r\n");
      out.write("									<select id=\"itemtype\" class=\"itemtype popInput\" name=\"type\">\r\n");
      out.write("										<option value=\"\">선택</option>\r\n");
      out.write("										<option value=\"완제품\">완제품</option>\r\n");
      out.write("										<option value=\"원자재\">원자재</option>\r\n");
      out.write("									</select>\r\n");
      out.write("								</div>\r\n");
      out.write("							</td>\r\n");
      out.write("						</tr>\r\n");
      out.write("						<tr>\r\n");
      out.write("							<td>입고일</td>\r\n");
      out.write("							<td><input type=\"date\" id=\"addin_date\" name=\"indate\"\r\n");
      out.write("								class=\"popInput\"></td>\r\n");
      out.write("						</tr>\r\n");
      out.write("					</tbody>\r\n");
      out.write("				</table>\r\n");
      out.write("				<div class=\"addbtn\">\r\n");
      out.write("					<input type=\"submit\" value=\"등록\" id=\"insertBtn\"\r\n");
      out.write("						style=\"font-size: 20px; background: #ccc; padding: 10px; margin: 10px; width: 100px; border: 1px solid #15579e;\">\r\n");
      out.write("				</div>\r\n");
      out.write("			</form>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("	<script>\r\n");
      out.write("			// 팝업 열기 (재고 등록)\r\n");
      out.write("			document.getElementById('addinven').onclick = function() {\r\n");
      out.write("	\r\n");
      out.write("				editingIndex = null; // 수정 모드 초기화\r\n");
      out.write("	\r\n");
      out.write("				document.getElementById('popup').style.display = 'block';\r\n");
      out.write("			};\r\n");
      out.write("\r\n");
      out.write("		    document.querySelector('#popup').addEventListener('click', (e)=>{\r\n");
      out.write("			    //console.log(e.target.classList.contains(\"popup\"))\r\n");
      out.write("			    if(e.target.classList.contains(\"popup\")){\r\n");
      out.write("					document.getElementById('popup').style.display = 'none';\r\n");
      out.write("			    }\r\n");
      out.write("			})\r\n");
      out.write("			\r\n");
      out.write("			// 팝업 닫기\r\n");
      out.write("			function closePopup() {\r\n");
      out.write("				document.getElementById('popup').style.display = 'none';\r\n");
      out.write("			}\r\n");
      out.write("		    \r\n");
      out.write("		    \r\n");
      out.write("		    const modify = document.querySelectorAll('.modify');\r\n");
      out.write("		    console.log(modify.length);\r\n");
      out.write("		    for(let i = 0 ; i < modify.length ; i++){\r\n");
      out.write("		    	modify[i].addEventListener('click', (e)=>{\r\n");
      out.write("		    		e.preventDefault()\r\n");
      out.write("		    		// console.log(e.target.parentNode.parentNode.parentNode);\r\n");
      out.write("		    		const trModify = e.target.closest(\"tr\");\r\n");
      out.write("		    		const dbgud = trModify.querySelector('#dbgud').innerText\r\n");
      out.write("		    		\r\n");
      out.write("		    		const form = document.createElement(\"form\");\r\n");
      out.write("		            form.method = \"POST\";\r\n");
      out.write("		            form.action = \"Inventorycheck\";\r\n");
      out.write("		            // `<input>` 요소를 생성하여 `command=modify1` 값을 숨겨서 전달\r\n");
      out.write("		            const input1 = document.createElement(\"input\");\r\n");
      out.write("		            input1.type = \"hidden\";\r\n");
      out.write("		            input1.name = \"command\";\r\n");
      out.write("		            const input2 = document.createElement(\"input\");\r\n");
      out.write("		            input2.type = \"hidden\";\r\n");
      out.write("		            const input3 = document.createElement(\"input\");\r\n");
      out.write("		            input3.type = \"hidden\";\r\n");
      out.write("		            const input4 = document.createElement(\"input\");\r\n");
      out.write("		            input4.type = \"hidden\";\r\n");
      out.write("		    		if( dbgud == \"원자재\"){\r\n");
      out.write("		    			// 원자재\r\n");
      out.write("		    			const lotNo = trModify.querySelector('#lotNo').innerText\r\n");
      out.write("			    		const materialname = trModify.querySelector('#materialname').innerText\r\n");
      out.write("			    		const maPartNum = trModify.querySelector('#maPartNum').innerText\r\n");
      out.write("			    		const maQuantity = trModify.querySelector('#maQuantity').innerText\r\n");
      out.write("			    		const maSpec = trModify.querySelector('#maSpec').innerText\r\n");
      out.write("			    		const maUnit = trModify.querySelector('#maUnit').innerText\r\n");
      out.write("			    		const receiptDate = trModify.querySelector('#receiptDate').innerText\r\n");
      out.write("			    		const maExpDate = trModify.querySelector('#maExpDate').innerText\r\n");
      out.write("			    		const inventoryId = trModify.querySelector('#inventoryId').value\r\n");
      out.write("		    			trModify.innerHTML =`\r\n");
      out.write("									<td id=\"lotNo\">${lotNo}</td>\r\n");
      out.write("									<td id=\"materialname\">${materialname}</td>\r\n");
      out.write("									<td>${dbgud}</td>\r\n");
      out.write("									<td id=\"maPartNum\">${maPartNum}</td>\r\n");
      out.write("									<td id=\"maQuantity\"><input type=\"number\" name=\"maQuantity\" value=\"${maQuantity}\" style=\"text-align: center; font-size: 12px;\" id=\"maQuantity1\"></td>\r\n");
      out.write("									<td id=\"maSpec\">${maSpec}</td>\r\n");
      out.write("									<td id=\"maUnit\">${maUnit}</td>\r\n");
      out.write("									<td id=\"receiptDate\"><input type=\"date\" name=\"receiptDate\" value=\"${receiptDate}\" style=\"font-size: 12px;\" id=\"receiptDate1\"></td>\r\n");
      out.write("									<td id=\"maExpDate\">${maExpDate}</td>\r\n");
      out.write("									<td>\r\n");
      out.write("										<input type=\"submit\" value=\"확인\"  class=\"yes\"\r\n");
      out.write("											style=\"width: 55px; height: 35px;\">\r\n");
      out.write("										<button class=\"cancel\" style=\"width: 55px; height: 35px;\">취소</button>\r\n");
      out.write("										<input type=\"hidden\" name=\"inventoryId\" value=\"${ inventoryId }\"\r\n");
      out.write("											id=\"inventoryId\">\r\n");
      out.write("									</td>\r\n");
      out.write("							`\r\n");
      out.write("						\r\n");
      out.write("		    		} else {\r\n");
      out.write("		    			\r\n");
      out.write("		    			// 완제품\r\n");
      out.write("		    			const prLotNo = trModify.querySelector('#prLotNo').innerText\r\n");
      out.write("			    		const productname = trModify.querySelector('#productname').innerText\r\n");
      out.write("			    		const prPartNum = trModify.querySelector('#prPartNum').innerText\r\n");
      out.write("			    		const prQuantity = trModify.querySelector('#prQuantity').innerText\r\n");
      out.write("			    		const prSpec = trModify.querySelector('#prSpec').innerText\r\n");
      out.write("			    		const prUnit = trModify.querySelector('#prUnit').innerText\r\n");
      out.write("			    		const makeDate = trModify.querySelector('#makeDate').innerText\r\n");
      out.write("			    		const prExpDate  = trModify.querySelector('#prExpDate ').innerText\r\n");
      out.write("			    		const productinvenid  = trModify.querySelector('#productinvenid ').value\r\n");
      out.write("			    		\r\n");
      out.write("		    			trModify.innerHTML =`\r\n");
      out.write("									<td id=\"prLotNo\">${prLotNo}</td>\r\n");
      out.write("									<td id=\"productname\">${productname}</td>\r\n");
      out.write("									<td>${dbgud}</td>\r\n");
      out.write("									<td id=\"prPartNum\">${prPartNum}</td>\r\n");
      out.write("									<td id=\"prQuantity\"><input type=\"number\" name=\"prQuantity\" value=\"${prQuantity}\" style=\"text-align: center; font-size: 12px;\" id=\"prQuantity1\"></td>\r\n");
      out.write("									<td id=\"prSpec\">${prSpec}</td>\r\n");
      out.write("									<td id=\"prUnit\">${prUnit}</td>\r\n");
      out.write("									<td id=\"makeDate\"><input type=\"date\" name=\"makeDate\" value=\"${makeDate}\" style=\"font-size: 12px;\" id=\"makeDate1\"</td>\r\n");
      out.write("									<td id=\"prExpDate\">${prExpDate}</td>\r\n");
      out.write("									<td>\r\n");
      out.write("										<input type=\"submit\" value=\"확인\"  class=\"yes\"\r\n");
      out.write("											style=\"width: 55px; height: 35px;\">\r\n");
      out.write("										<button class=\"cancel\" style=\"width: 55px; height: 35px;\">취소</button>\r\n");
      out.write("										<input type=\"hidden\" name=\"productinvenid\"\r\n");
      out.write("											value=\"${ productinvenid }\" id=\"productinvenid\">\r\n");
      out.write("									</td>\r\n");
      out.write("							`\r\n");
      out.write("						\r\n");
      out.write("		    		}\r\n");
      out.write("		    		const yes = document.querySelectorAll('.yes');\r\n");
      out.write("		    		yes[i].addEventListener('click', (e)=>{\r\n");
      out.write("						if( dbgud == \"원자재\"){\r\n");
      out.write("							input1.value = \"modify1\"; // 수정 명령어 값\r\n");
      out.write("			    			// 5. `<input>` 요소를 생성하여 `inventoryId` 값을 숨겨서 전달\r\n");
      out.write("				            input2.name = \"inventoryId\";\r\n");
      out.write("				            input3.name = \"maQuantity\";\r\n");
      out.write("				            input4.name = \"receiptDate\";\r\n");
      out.write("				            input2.value = trModify.querySelector('#inventoryId').value;\r\n");
      out.write("				            input3.value = trModify.querySelector('#maQuantity1').value\r\n");
      out.write("				            input4.value = trModify.querySelector('#receiptDate1').value\r\n");
      out.write("						} else{\r\n");
      out.write("							input1.value = \"modify2\"; // 수정 명령어 값\r\n");
      out.write("			    			// 5. `<input>` 요소를 생성하여 `inventoryId` 값을 숨겨서 전달\r\n");
      out.write("				            input2.name = \"productinvenid\";\r\n");
      out.write("				            input3.name = \"prQuantity\";\r\n");
      out.write("				            input4.name = \"makeDate\";\r\n");
      out.write("				            input2.value = trModify.querySelector('#productinvenid').value;\r\n");
      out.write("				            input3.value = trModify.querySelector('#prQuantity1').value\r\n");
      out.write("				            input4.value = trModify.querySelector('#makeDate1').value\r\n");
      out.write("						}\r\n");
      out.write("						// 6. 생성한 `<input>` 요소들을 `<form>`에 추가\r\n");
      out.write("			            form.appendChild(input1);\r\n");
      out.write("			            form.appendChild(input2);\r\n");
      out.write("			            form.appendChild(input3);\r\n");
      out.write("			            form.appendChild(input4);\r\n");
      out.write("			            // 7. `<form>`을 현재 문서의 `<body>`에 추가 (보이지 않지만 존재해야 함)\r\n");
      out.write("			            document.body.appendChild(form);\r\n");
      out.write("			            // 8. 폼을 자동으로 제출 (서버에 데이터 전송)\r\n");
      out.write("			            form.submit();\r\n");
      out.write("						alert(\"수정되었습니다.\")\r\n");
      out.write("						\r\n");
      out.write("					}) // yes event end\r\n");
      out.write("					\r\n");
      out.write("					\r\n");
      out.write("					const cancel = document.querySelectorAll('.cancel');\r\n");
      out.write("		    		cancel[i].addEventListener('click', (e)=>{\r\n");
      out.write("		    			location.reload();\r\n");
      out.write("	    			})\r\n");
      out.write("	    			\r\n");
      out.write("		    			\r\n");
      out.write("		    	}) // modify addevent end\r\n");
      out.write("		    } // for end\r\n");
      out.write("		    \r\n");
      out.write("		    \r\n");
      out.write("		    document.querySelector('#insertBtn').addEventListener('click', (e)=>{\r\n");
      out.write("		    	e.preventDefault();\r\n");
      out.write("		    	let hiddenInventoryId = document.querySelector('#hiddenInventoryId');\r\n");
      out.write("		    	let hiddenProductInvenId = document.querySelector('#hiddenProductInvenId');\r\n");
      out.write("		    	let itemtype = document.querySelector('#itemtype').value;\r\n");
      out.write("		    	let inputBox = document.querySelector('#additem')\r\n");
      out.write("		    	let addquantity = document.querySelector('#addquantity');\r\n");
      out.write("		    	let addin_date = document.querySelector('#addin_date');\r\n");
      out.write("		    	let datalist = document.querySelector('#suggestions');\r\n");
      out.write("		    	let options = datalist.querySelectorAll('option');\r\n");
      out.write("		    	\r\n");
      out.write("		    	if( inputBox.value == ''){\r\n");
      out.write("		    		alert(\"품명을 입력해주시기 바랍니다.\")\r\n");
      out.write("		    		return;\r\n");
      out.write("		    	} else if( addquantity.value == '' ){\r\n");
      out.write("		    		alert(\"입고수량을 입력해주시기 바랍니다.\")\r\n");
      out.write("		    		return;\r\n");
      out.write("		    	} else if ( addin_date.value == '' ){\r\n");
      out.write("		    		alert(\"입고일을 입력해주시기 바랍니다.\")\r\n");
      out.write("		    		return;\r\n");
      out.write("		    	}\r\n");
      out.write("		    	\r\n");
      out.write("		    	for( let option of options ){\r\n");
      out.write("		    		\r\n");
      out.write("		    		if( option.value === inputBox.value){\r\n");
      out.write("		    			let data = option.getAttribute('data-id');\r\n");
      out.write("		    			let type = option.getAttribute('data-type');\r\n");
      out.write("		    			if( data ){\r\n");
      out.write("		    				hiddenInventoryId.value = data;\r\n");
      out.write("		                    hiddenProductInvenId.value = data;\r\n");
      out.write("			    			if(itemtype != type){\r\n");
      out.write("			    				alert(\"제품유형을 다시 선택해주시기 바랍니다.\");\r\n");
      out.write("			    				return;\r\n");
      out.write("			    			}\r\n");
      out.write("		    			}\r\n");
      out.write("			    		break;\r\n");
      out.write("		    		} \r\n");
      out.write("		    	}\r\n");
      out.write("		    	document.querySelector('#inputForm').submit();\r\n");
      out.write("		    })\r\n");
      out.write("		    \r\n");
      out.write("			const del = document.querySelectorAll('.del');\r\n");
      out.write("			const delF = document.querySelectorAll('.delFrom')\r\n");
      out.write("			for(let i = 0; i < del.length; i++){\r\n");
      out.write("				del[i].addEventListener('click', (e)=>{\r\n");
      out.write("					e.preventDefault()\r\n");
      out.write("					const tt = confirm(\"정말로 삭제하시겠습니까?\")\r\n");
      out.write("					if(tt){\r\n");
      out.write("						delF[i].submit();\r\n");
      out.write("					}\r\n");
      out.write("				})\r\n");
      out.write("			}\r\n");
      out.write("		\r\n");
      out.write("	</script>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fforEach_005f0.setParent(null);
    // /WEB-INF/Inventorycheck.jsp(71,4) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f0.setVar("dto");
    // /WEB-INF/Inventorycheck.jsp(71,4) name = items type = java.lang.Object reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f0.setItems((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${resultList}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
    int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
    try {
      int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
      if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("					<tr>\r\n");
          out.write("						<td id=\"lotNo\">");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ dto.maLotNo }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</td>\r\n");
          out.write("						<td id=\"materialname\">");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ dto.materialname }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</td>\r\n");
          out.write("						<td id=\"dbgud\">원자재</td>\r\n");
          out.write("						<td id=\"maPartNum\">");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ dto.maPartNum }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</td>\r\n");
          out.write("						<td id=\"maQuantity\">");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ dto.maQuantity }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</td>\r\n");
          out.write("						<td id=\"maSpec\">");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ dto.maSpec }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</td>\r\n");
          out.write("						<td id=\"maUnit\">");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ dto.maUnit }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</td>\r\n");
          out.write("						<td id=\"receiptDate\">");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ dto.receiptDate }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</td>\r\n");
          out.write("						<td id=\"maExpDate\">");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ dto.maExpDate }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</td>\r\n");
          out.write("						<td>\r\n");
          out.write("							<form method=\"post\" action=\"Inventorycheck\" id=\"updateForm1\"\r\n");
          out.write("								class=\"delFrom\">\r\n");
          out.write("								<button class=\"modify\" style=\"width: 55px; height: 35px;\">수정</button>\r\n");
          out.write("								<input type=\"hidden\" name=\"command\" value=\"delete1\">\r\n");
          out.write("								<input type=\"submit\" name=\"delete\" value=\"삭제\" id=\"del\" class=\"del\"\r\n");
          out.write("									style=\"width: 55px; height: 35px;\">\r\n");
          out.write("								<input type=\"hidden\" name=\"inventoryId\" value=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ dto.inventoryId }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\"\r\n");
          out.write("									id=\"inventoryId\">\r\n");
          out.write("							</form>\r\n");
          out.write("						</td>\r\n");
          out.write("					</tr>\r\n");
          out.write("				");
          int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (java.lang.Throwable _jspx_exception) {
      while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
    } finally {
      _jspx_th_c_005fforEach_005f0.doFinally();
    }
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f1 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    _jspx_th_c_005fforEach_005f1.setPageContext(_jspx_page_context);
    _jspx_th_c_005fforEach_005f1.setParent(null);
    // /WEB-INF/Inventorycheck.jsp(95,4) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f1.setVar("dto");
    // /WEB-INF/Inventorycheck.jsp(95,4) name = items type = java.lang.Object reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f1.setItems((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${resultList2}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
    int[] _jspx_push_body_count_c_005fforEach_005f1 = new int[] { 0 };
    try {
      int _jspx_eval_c_005fforEach_005f1 = _jspx_th_c_005fforEach_005f1.doStartTag();
      if (_jspx_eval_c_005fforEach_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("					<tr>\r\n");
          out.write("						<td id=\"prLotNo\">");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ dto.prLotNo }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</td>\r\n");
          out.write("						<td id=\"productname\">");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ dto.productname }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</td>\r\n");
          out.write("						<td id=\"dbgud\">완제품</td>\r\n");
          out.write("						<td id=\"prPartNum\">");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ dto.prPartNum }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</td>\r\n");
          out.write("						<td id=\"prQuantity\">");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ dto.prQuantity }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</td>\r\n");
          out.write("						<td id=\"prSpec\">");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ dto.prSpec }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</td>\r\n");
          out.write("						<td id=\"prUnit\">");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ dto.prUnit }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</td>\r\n");
          out.write("						<td id=\"makeDate\">");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ dto.makeDate }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</td>\r\n");
          out.write("						<td id=\"prExpDate\">");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ dto.prExpDate }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</td>\r\n");
          out.write("						<td>\r\n");
          out.write("							<form method=\"post\" action=\"Inventorycheck\" id=\"updateForm2\"\r\n");
          out.write("								class=\"delFrom\">\r\n");
          out.write("								<button class=\"modify\" style=\"width: 55px; height: 35px;\">수정</button>\r\n");
          out.write("								<input type=\"hidden\" name=\"command\" value=\"delete2\">\r\n");
          out.write("								<input type=\"submit\" name=\"delete\" value=\"삭제\" id=\"del\" class=\"del\"\r\n");
          out.write("									style=\"width: 55px; height: 35px;\">\r\n");
          out.write("								<input type=\"hidden\" name=\"productinvenid\"\r\n");
          out.write("									value=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ dto.productinvenId }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\" id=\"productinvenid\">\r\n");
          out.write("							</form>\r\n");
          out.write("						</td>\r\n");
          out.write("					</tr>\r\n");
          out.write("				");
          int evalDoAfterBody = _jspx_th_c_005fforEach_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fforEach_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (java.lang.Throwable _jspx_exception) {
      while (_jspx_push_body_count_c_005fforEach_005f1[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_c_005fforEach_005f1.doCatch(_jspx_exception);
    } finally {
      _jspx_th_c_005fforEach_005f1.doFinally();
    }
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f1);
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f2 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    _jspx_th_c_005fforEach_005f2.setPageContext(_jspx_page_context);
    _jspx_th_c_005fforEach_005f2.setParent(null);
    // /WEB-INF/Inventorycheck.jsp(151,9) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f2.setVar("dto");
    // /WEB-INF/Inventorycheck.jsp(151,9) name = items type = java.lang.Object reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f2.setItems((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${matDB}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
    int[] _jspx_push_body_count_c_005fforEach_005f2 = new int[] { 0 };
    try {
      int _jspx_eval_c_005fforEach_005f2 = _jspx_th_c_005fforEach_005f2.doStartTag();
      if (_jspx_eval_c_005fforEach_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("										<option value=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.materialname}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\"\r\n");
          out.write("											data-id=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.materialId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\" data-type=\"원자재\"></option>\r\n");
          out.write("									");
          int evalDoAfterBody = _jspx_th_c_005fforEach_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fforEach_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (java.lang.Throwable _jspx_exception) {
      while (_jspx_push_body_count_c_005fforEach_005f2[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_c_005fforEach_005f2.doCatch(_jspx_exception);
    } finally {
      _jspx_th_c_005fforEach_005f2.doFinally();
    }
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f2);
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f3 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    _jspx_th_c_005fforEach_005f3.setPageContext(_jspx_page_context);
    _jspx_th_c_005fforEach_005f3.setParent(null);
    // /WEB-INF/Inventorycheck.jsp(155,9) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f3.setVar("dto");
    // /WEB-INF/Inventorycheck.jsp(155,9) name = items type = java.lang.Object reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f3.setItems((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${prodDB}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
    int[] _jspx_push_body_count_c_005fforEach_005f3 = new int[] { 0 };
    try {
      int _jspx_eval_c_005fforEach_005f3 = _jspx_th_c_005fforEach_005f3.doStartTag();
      if (_jspx_eval_c_005fforEach_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("										<option value=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.productname}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\"\r\n");
          out.write("											data-id=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.productId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\" data-type=\"완제품\"></option>\r\n");
          out.write("									");
          int evalDoAfterBody = _jspx_th_c_005fforEach_005f3.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fforEach_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (java.lang.Throwable _jspx_exception) {
      while (_jspx_push_body_count_c_005fforEach_005f3[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_c_005fforEach_005f3.doCatch(_jspx_exception);
    } finally {
      _jspx_th_c_005fforEach_005f3.doFinally();
    }
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f3);
    return false;
  }
}
