/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.100
 * Generated at: 2025-03-12 00:23:33 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Performance_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<title>실적등록</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css\\Performance.css\">\r\n");
      out.write("<script src=\"js\\Performance.js\"></script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("	<div id=\"myModal\" class=\"modal\">\r\n");
      out.write("		<div class=\"modal-content\">\r\n");
      out.write("			<span class=\"close\">&times;</span>\r\n");
      out.write("			<p>여기는 모달창 내용 영역입니다.</p>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	<div class=\"warrap\">\r\n");
      out.write("		<div class=\"instruction\">\r\n");
      out.write("			<div class=\"instTop\">\r\n");
      out.write("				<div class=\"wkr\">작업지시서</div>\r\n");
      out.write("				<div>\r\n");
      out.write("					<button class=\"btn1\">조회</button>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"instView\"></div>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div>\r\n");
      out.write("\r\n");
      out.write("			<div class=\"bord\">\r\n");
      out.write("				<div class=\"inBord\">\r\n");
      out.write("					<div>현재 진행률</div>\r\n");
      out.write("					<div>%</div>\r\n");
      out.write("					<div>(제품별)</div>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"inBord\">\r\n");
      out.write("					<div>불량률</div>\r\n");
      out.write("					<div>%</div>\r\n");
      out.write("					<div>(제품별)</div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"box2\">\r\n");
      out.write("				<div class=\"criteria\">\r\n");
      out.write("					<div class=\"wp\">제품명</div>\r\n");
      out.write("					<div class=\"btn2B\">\r\n");
      out.write("						<button class=\"btn2\">제품 합격/불합격 기준</button>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"registration\">\r\n");
      out.write("					<div class=\"rightTop\">\r\n");
      out.write("						<div class=\"wp2\">제품명</div>\r\n");
      out.write("						<div>\r\n");
      out.write("							<input type=\"datetime-local\" class=\"date1\">\r\n");
      out.write("						</div>\r\n");
      out.write("						<button class=\"btn3\">등록</button>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div>\r\n");
      out.write("						<div id=\"ea\">\r\n");
      out.write("							생산갯수 : <input type=\"number\" id=\"myInput\" min=\"1\" max=\"100\"\r\n");
      out.write("								oninput=\"validity.valid||(value='')\" value=\"10\"> pack\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("					<textarea name=\"\" id=\"\" class=\"textarea1\" rows=\"8\" heigth=\"100\"></textarea>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"box3\">\r\n");
      out.write("				<div class=\"box3Top\">\r\n");
      out.write("					<div>\r\n");
      out.write("						<input type=\"text\" class=\"wp3\" placeholder=\"제품명\">\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"date2\">\r\n");
      out.write("						<input type=\"datetime-local\" class=\"indate1\"> ~ <input\r\n");
      out.write("							type=\"datetime-local\" class=\"indate2\">\r\n");
      out.write("					</div>\r\n");
      out.write("					<div>\r\n");
      out.write("						<button class=\"btn4\">조회</button>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"indexBox\">\r\n");
      out.write("					<div class=\"index\">\r\n");
      out.write("						<div>날짜</div>\r\n");
      out.write("						<div>제품명</div>\r\n");
      out.write("						<div>수량</div>\r\n");
      out.write("						<div>생산현황</div>\r\n");
      out.write("						<div>코멘트</div>\r\n");
      out.write("						<div>등록인</div>\r\n");
      out.write("						<div>비고</div>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"box3View\"></div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("		<script>\r\n");
      out.write("			\r\n");
      out.write("		</script>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
